# CHANGE:
#  - PROBEPREP_ENDSTOP     to whatever you use to get your super-secret-special probing place...
#  - variable_default_*    to whatever your fancy is. 
#  - RESPOND               to whatever you use for the console messages. or
#                          visit: https://klipper.discourse.group/t/extend-respond-command-with-some-color-options/4158/5 
#                          and get the revised macro ... maybe ill post my version at some point but dont think its needed here.
# DONT FORGET
#  - [save_variables]      you need to set this up. if you need help with it, google is your friend (im not your dad).

# and many blessings upon you ... or ... something.

[gcode_macro EDDY_Z_OFFSET]
# THIS IS FOR US WHO DON'T USE THE EDDY PROBE AS OUR Z_OFFSET!!!
# FOR RESPOND, see this macro here: https://klipper.discourse.group/t/extend-respond-command-with-some-color-options/4158/5
#   or maybe ill put my own eventually... yeah thats it.
description: Apply the offset to the Eddy zero position. PROBE = probe you want to apply to.
variable_default_probe: "btt_eddy"
variable_default_eddy_fake_offset_dontmatter: 10 # this is an initial value to show WE HAVENT DONE THIS YET.
variable_starting_eddy_fake_offset: 0.6
variable_default_eddy_probe_origin: 0 # I'm assuming 0; no reason not to. yolo. but not using it anyways. hi.
variable_probe_max_calibration_temp: 55 # you change this. 

gcode:
  {% if printer.configfile.config["stepper_z"].endstop_pin == "probe:z_virtual_endstop" %}
     {action_raise_error("No. I dont work for Eddy Probe as Z endstop. Get off my lawn.")}
  {% endif %}
  {% set svv = printer.save_variables.variables %} # loading up some saved variables..
  {% set probe = params.PROBE|default(default_probe)|string %}
  {% set eddy_fake_offset = svv.eddy_fake_offset|default(default_eddy_fake_offset_dontmatter)|float|round(3) %}
  {% if eddy_fake_offset == default_eddy_fake_offset_dontmatter %}
    RESPOND PREFIX="WARNING" prefix_color="warning" msg="First Time Running? Setting to a default "
    RESPOND PREFIX="Setting Default to  z={starting_eddy_fake_offset} ..." PREFIX_COLOR="success"
    {% set eddy_fake_offset = starting_eddy_fake_offset %}
    RESPOND TYPE=echo prefix="default:" prefix_color="info" msg="Then we save this for future usage" prefix_color="info"
    RESPOND TYPE=echo prefix="default:" prefix_color="info" msg="The goal is to work DOWN (or up) to where you need to be. " prefix_color="info"
    RESPOND TYPE=echo prefix="default:" prefix_color="info" msg="Yes, yes, yes. I know. This may not be exact but we have to start.. somewhere. " prefix_color="info"
    RESPOND TYPE=WARNING PREFIX="IF YOUR Z_OFFSET WAS NOT SET AT THIS _EXACT_SPOT_ , THIS WILL END BADLY." PREFIX_COLOR="WARNING"

  {% endif %}
  {% if printer["temperature_probe "+probe].temperature >= probe_max_calibration_temp %}
    RESPOND TYPE=error COLOR=warning MSG="Probe temp too HIGH!"
    RESPOND MSG="Whoa there cowboy. You need to cool that probe off!" 
    RESPOND TYPE=command COLOR=warning MSG="Wait until '{probe}' > {probe_max_calibration_temp}C (currently at {printer["temperature_probe "+probe].temperature|round(2)|string})" 
    {action_raise_error("You're probe is too hot and needs to cool off")}
  {% else %}
    {% set z_expected_offset = printer.gcode_move.homing_origin.z|float|round(4) %}
    SET_GCODE_OFFSET Z=0 
    {% set final_offset = eddy_fake_offset+z_expected_offset|float|round(4) %}
    RESPOND PREFIX=EDDY_Z_OFFSET color=info MSG="Final offset: ({eddy_fake_offset} + {z_expected_offset} = {final_offset} ) "
    RESPOND PREFIX=EDDY_Z_OFFSET color=info MSG="Setting offset: {z_expected_offset}"
    RESPOND PREFIX=EDDY_Z_OFFSET color=info MSG="Current {probe} offset:  {eddy_fake_offset}"
    RESPOND PREFIX=EDDY_Z_OFFSET color=success MSG="Cleansing all settings..."
    BED_MESH_CLEAR
    TEMPERATURE_PROBE_ENABLE ENABLE=1 PROBE={probe} # just gonna do this everywhere from now on.
    G90 # better safe than sorry?
    G28 # Already got the offset saved in var so good to go.
    # PROBE_EDDY_CURRENT_MOVE POSITION=probe # I dont use this; got my own thang.
    PROBEPREP_ENDSTOP
    SAVE_VARIABLE VARIABLE=eddy_fake_offset VALUE='{final_offset}'
    
    G1 Z{final_offset} F3000
    PROBE_EDDY_CURRENT_CALIBRATE CHIP={probe}

    G1 Z{final_offset} 
    TESTZ Z=+0.1
    TESTZ Z=-0.1
    RESPOND PREFIX=EDDY_Z_OFFSET color=warning MSG="OTHERWISE THE SAVED VARIABLE IS RUINED."
    RESPOND PREFIX=EDDY_Z_OFFSET color=success MSG="I'll accept this for you."
    ACCEPT
    RESPOND PREFIX=EDDY_Z_OFFSET color=success MSG="DO NOT FORGET TO SAVE YOUR CONFIG."
    RESPOND PREFIX=EDDY_Z_OFFSET color=info MSG="DO NOT FORGET TO SAVE YOUR CONFIG."
    RESPOND PREFIX=EDDY_Z_OFFSET color=success MSG="DO NOT FORGET TO SAVE YOUR CONFIG."
  {% endif %}
